{
    "contents" : "\n\n###############################################\n################################################\nsummary(bike)\nbikeInv<-ginv(as.matrix(bike))\nACT<-bikeInv %*% actual\nCAU<-bikeInv %*% causal\nREG<-bikeInv %*% registered\n\n#Only Counts\nTrainPredictions<-cbind(exp(bike %*% ACT))\nTrainPredictions[TrainPredictions[,1]<0,1]<-0\ncompare <- cbind(countresult,TrainPredictions)\nhead(compare)\n#auc_Counts<-auc(countresult,TrainPredictions)\n#ci_Counts <-ci(countresult,TrainPredictions)\nrmsle_Counts <-rmsle(countresult,TrainPredictions)\nrmsle_Counts\nmyroc <- roc(countresult,TrainPredictions)\nplot(myroc)\n\n\n#registered & Causal\nTrainPredictions1<-cbind(exp(bike %*% CAU))\nTrainPredictions1[TrainPredictions1[,1]<0,1]<-0\nTrainPredictions2<-cbind(exp(bike %*% REG))\nTrainPredictions2[TrainPredictions2[,1]<0,1]<-0\nTrainPredictionsCombo <- cbind(rowSums(TrainPredictions1,TrainPredictions2))\n#auc_Combo <- auc(countresult,TrainPredictionsCombo)\nrmsle_Combo <- rmsle(countresult,TrainPredictionsCombo)\nrmsle_Combo\n#ci_Combo <- ci(countresult,TrainPredictionsCombo)\nmyroc1 <- roc(countresult,TrainPredictionsCombo)\nplot(myroc1)\n\n\n\n#Predictions count\ncPredictions<-cbind(exp(test %*% ACT))\ncPredictCau<-cbind(exp(test %*% CAU)) \ncPredictReg<-cbind(exp(test %*% REG)) \n\ncPredictions[cPredictions[,1]<0,1]<-0\ncPredictCau[cPredictCau[,1]<0,1]<-0\ncPredictReg[cPredictReg[,1]<0,1]<-0\n\n#Count from Causal & registered\ntheCombo<-cbind(((cPredictCau)+(cPredictReg))) \nPredictions_comb<-cbind(times,theCombo)\ncolnames(Predictions_comb)<-c(\"datetime\",\"count\")\nhead(Predictions_comb)\n\n#Count Predictions\nPredictions<-cbind(times,cPredictions)\ncolnames(Predictions)<-c(\"datetime\",\"count\")\nhead(Predictions)\n\n#### RESULT ##############\nresult.train <- cbind(result.train,matrix.count=TrainPredictions)\nresult.test <- cbind(result.test,matrix.count=cPredictions)\nresult.train <- cbind(result.train,matrix.cau.reg=TrainPredictionsCombo)\nresult.test <- cbind(result.test,matrix.cau.reg=theCombo)\n\n\n########################################################\n## Output\n########################################################\n\ncurtime <- Sys.time()\ntimestamp <-  strftime(curtime,\"%Y-%m-%d-%H-%M-%S\")\ntimestamp1 <-paste(\"Submission_combo_Matrix\",timestamp,\".csv\", sep=\"_\")\ntimestamp2 <-paste(\"Submission_Matrix\",timestamp,\".csv\", sep=\"_\")\n\nwrite.table(Predictions_comb,file=timestamp1,row.names=FALSE,quote=FALSE,sep=\",\",col.names=TRUE)\nwrite.table(Predictions,file=timestamp2,row.names=FALSE,quote=FALSE,sep=\",\",col.names=TRUE)\n\nx<-paste(timestamp2,\"AUC\",auc_Counts,\"Logloss\",rmsle_Counts,collapse=\"  \")\nprint(x)\nwrite(x, file = \"Results_compare.txt\",append = TRUE, sep = \" \")\n",
    "created" : 1422157208522.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2454108293",
    "id" : "6D6E3203",
    "lastKnownWriteTime" : 1422344167,
    "path" : "~/workspace/kaggle/bikeshare/matrix.R",
    "project_path" : "matrix.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}