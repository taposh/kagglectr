{
    "contents" : "#--------------------------------------------------------\n#  Main Program for kaggle-bike-sharing\n#  Taposh Roy\n#  @taposh_dr\n#--------------------------------------------------------\nsetwd(\"/Users/taposh/workspace/kaggle/bikeshare/\")\n#sink the output\n#sink(\"bikeshare.log\", split = T)\n#source the libraries\nsource(\"mylibraries.R\")\n\n#read in train/test\ntest_classes = c(\n  \"character\", # datetime\n  \"numeric\", # season\n  \"numeric\", # holiday\n  \"numeric\", # workingday\n  \"numeric\", # weather\n  \"numeric\", # temp\n  \"numeric\", # atemp\n  \"numeric\", # humidity\n  \"numeric\", # windspeed\n  \"numeric\", #registered\n  \"numeric\" #count\n)\nset_up_features <- function(df) {\n  df$datetime <- strptime(df$datetime, format=\"%Y-%m-%d %H:%M:%S\")\n  df$time <- df$datetime$hour + df$datetime$min/60. + df$datetime$sec/3600.\n  df$wday <- as.numeric(df$datetime$wday)\n  df$month <- as.numeric(df$datetime$mon)\n  df$year <- as.numeric(df$datetime$year - 111)\n  df\n}\n\ntrain <- read.csv(\"train.csv\", colClasses=test_classes)\ntest <- read.csv(\"test.csv\", colClasses=test_classes[1:9])\ntrain$count <- as.integer(train$count)\n\ntrain_factor <- set_up_features(train)\ntest_factor <- set_up_features(test)\n\n\ntrain_factor<- train_factor[,-11]\ntrain_factor<- train_factor[,-10]\ntrain_factor<- train_factor[,-1]\ntest_factor<- test_factor[,-1]\n\nhead(test_factor)\n\ntemp <- train_factor[,!(colnames(train_factor) %in% 'count')]\npp.rule <- preProcess(temp, method=c('range'))\npp.train <- predict(pp.rule,temp)\npp.test <- predict(pp.rule,test_factor)\npp.train$count <- train_factor[,'count']\npp.test$datetime <- test$datetime\n\nhead(train_factor)\n\nset.seed(1523)\ntrainIndex <- createDataPartition(pp.train$count, p = 0.8, list=FALSE, times=1)\nnrow(trainIndex)\nsubTrain <- pp.train[trainIndex,]\nsubTest <- pp.train[-trainIndex,]\n\n# factorize the features with few levels\nsubTrain2<-subTrain\nsubTest2 <- subTest\npp.2.test <- pp.test\nind <- c(1,2,3,4,10,11,12)\nfor (i in ind) {subTrain2[,i] <- as.factor(subTrain2[,i])}\nfor (i in ind) {subTest2[,i] <- as.factor(subTest2[,i])}\nfor (i in ind) {pp.2.test[,i] <- as.factor(pp.2.test[,i])}\n\nhead(subTest)\n\nsource(\"utils.R\")\nsource(\"models.R\")\n\nload(file='fit_gbm.RData')\nload(file='fit_gbmf.RData')\nload(file='fit_enet.RData')\nload(file='fit_pcr.RData')\nload(file='fit_glmnet.RData')\nload(file='fit_glmnet2.RData')\nload(file='fit_qrf.RData')\nload(file='fit_rf.RData')\nload(file='fit_cforest.RData')\nload(file='fit_rvmRadial.RData')\nload(file='fit_nnet.RData')\nload(file='fit_neuralnet.RData')\n\ncompare <- data.frame()\ncompare<-tool.performance(fit.gbm,subTest,subTrain,'gbm.CV',compare)\ncompare<-tool.performance(fit.gbm.f,subTest2,subTrain2,'gbm.CV.f',compare)\ncompare<-tool.performance(fit.enet,subTest,subTrain,'enet.CV',compare)\ncompare<-tool.performance(fit.pcr,subTest,subTrain,'pcr.CV',compare)\ncompare<-tool.performance(fit.glmnet,subTest,subTrain,'glmnet.CV',compare)\ncompare<-tool.performance(fit.glmnet.2OrderInt,subTest,subTrain,'glmnet.2OInt.CV',compare)\ncompare<-tool.performance(fit.qrf,subTest,subTrain,'qrf.CV',compare)\ncompare<-tool.performance(fit.qrf.f,subTest2,subTrain2,'qrf.CV.f',compare)\ncompare<-tool.performance(fit.rf,subTest2,subTrain2,'rf.oob.3',compare)\ncompare<-tool.performance(fit.cforest,subTest2,subTrain2,'cforest.oob',compare)\ncompare<-tool.performance(fit.pcaNNet,subTest,subTrain,'pcaNNet.CV.3',compare)\ncompare<-tool.performance(fit.nnet,subTest,subTrain,'nnet.CV.2',compare)\ncompare<-tool.performance(fit.neuralnet,subTest,subTrain,'neuralnet',compare)\ncompare<-tool.performance(fit.rvmRadial,subTest,subTrain,'rvmRadial.CV',compare)\n\nshow(compare)\n",
    "created" : 1421691592070.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2523698433",
    "id" : "ECF782BB",
    "lastKnownWriteTime" : 1422152587,
    "path" : "~/workspace/kaggle/bikeshare/bikeshareV2.R",
    "project_path" : "bikeshareV2.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}